openapi: 3.0.3
info:
  title: AdoptMe API - Users Module
  version: "1.0.0"
  description: |
    Documentación del módulo **Users**. Incluye los endpoints de listado, detalle, actualización y borrado.
servers:
  - url: http://localhost:8080
paths:
  /api/users:
    get:
      summary: Listar usuarios
      description: Devuelve todos los usuarios.
      tags: [Users]
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
  /api/users/{uid}:
    get:
      summary: Obtener un usuario por id
      tags: [Users]
      parameters:
        - in: path
          name: uid
          required: true
          schema: { type: string }
          description: ID de usuario (ObjectId)
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  payload: { $ref: '#/components/schemas/User' }
        '404':
          description: Usuario no encontrado
    put:
      summary: Actualizar un usuario
      tags: [Users]
      parameters:
        - in: path
          name: uid
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInput'
      responses:
        '200':
          description: Actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  payload: { $ref: '#/components/schemas/User' }
        '404':
          description: Usuario no encontrado
    delete:
      summary: Eliminar un usuario
      tags: [Users]
      parameters:
        - in: path
          name: uid
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: User deleted }
        '404':
          description: Usuario no encontrado
components:
  schemas:
    User:
      type: object
      properties:
        _id: { type: string, example: 64f2a1c0b3a9c21f5b8b1234 }
        first_name: { type: string, example: Ana }
        last_name: { type: string, example: Pérez }
        email: { type: string, example: ana@example.com }
        role: { type: string, example: user }
        pets:
          type: array
          items:
            type: object
            properties:
              _id: { type: string, example: 64f2a1c0b3a9c21f5b8b5678 }
    UpdateUserInput:
      type: object
      properties:
        first_name: { type: string, example: Ana }
        last_name: { type: string, example: Pérez }
        role: { type: string, example: admin }
